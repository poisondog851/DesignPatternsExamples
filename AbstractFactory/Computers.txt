
package abstractfactory;


public class AbstractFactory {

    public static void main(String[] args) {
        testAbstractFactory();
    }
    private static void testAbstractFactory(){
        Computer PC = ComputerFactory.getComputer(new PCFactory("2 GB", "500 GB", "2.4 GHZ"));
        Computer Server = ComputerFactory.getComputer(new ServerFactory("16 GB", "1 TB", "2.9 GHZ"));
        System.out.println(PC);
        System.out.println(Server);
    }
}

abstract class  Computer{
    public abstract String getRAM();
    public abstract String getHDD();
    public abstract String getCPU();
    
    @Override
    public String toString(){
        return "RAM="+this.getRAM()+", HDD="+this.getHDD()+", CPU="+this.getCPU();
    }
}


class PC extends Computer{
    
    private String ram;
    private String hdd;
    private String cpu;
    
    public PC(String ram, String hdd, String cpu){
        this.ram = ram;
        this.hdd = hdd;
        this.cpu = cpu;
    }

    @Override
    public String getRAM() {
        return this.ram;
    }

    @Override
    public String getHDD() {
        return this.hdd;
    }

    @Override
    public String getCPU() {
        return this.cpu;
    }
}


class Server extends Computer{
    
    private String ram;
    private String hdd;
    private String cpu;
    
    public Server(String ram, String hdd, String cpu){
        this.ram = ram;
        this.hdd = hdd;
        this.cpu = cpu;
    }

    @Override
    public String getRAM() {
        return this.ram;
    }

    @Override
    public String getHDD() {
        return this.hdd;
    }

    @Override
    public String getCPU() {
        return this.cpu;
    }
}

interface ComputerAbstracFactory{
    public Computer createComputer();
}

 class PCFactory implements ComputerAbstracFactory{

    private String ram;
    private String hdd;
    private String cpu;
    
    public PCFactory(String ram, String hdd, String cpu){
        this.ram = ram;
        this.hdd = hdd;
        this.cpu = cpu;
    }
    @Override
    public Computer createComputer() {
        return new PC(ram,hdd,cpu) ;
    }
}

class ServerFactory implements ComputerAbstracFactory{

    private String ram;
    private String hdd;
    private String cpu;
    
    public ServerFactory(String ram, String hdd, String cpu){
        this.ram = ram;
        this.hdd = hdd;
        this.cpu = cpu;
    }
    @Override
    public Computer createComputer() {
        return new Server(ram,hdd,cpu) ;
    }
}

class ComputerFactory{
    public static Computer getComputer(ComputerAbstracFactory factory){
        return factory.createComputer();
    }
}