package test;



import java.util.ArrayList;
import java.util.List;



public class Test {

    public static void main(String[] args) {
        NewsPublisher publisher = new BusinessNewsPublisher();
        Subscriber subscriber1 = new EmailSubscriber();
        Subscriber subscriber2 = new SmsSubscriber();

        publisher.attache(subscriber1);
        publisher.attache(subscriber2);

        publisher.setLatestNews("Hello, Subscriber(Observer)!!!");

        System.out.println("Detaching subsriber # 2...");
        publisher.detach(subscriber2);

        publisher.setLatestNews("Hi, All! Who listens to me?");
    }

}



interface Subscriber {

    public void update(NewsPublisher newsPublisher);

}



class EmailSubscriber implements Subscriber {

    @Override
    public void update(NewsPublisher newsPublisher) {
        System.out.println("E-mail subscriber: "
                + newsPublisher.getLatestNews());
    }

}



class SmsSubscriber implements Subscriber {

    @Override
    public void update(NewsPublisher newsPublisher) {
        System.out.println("Sms subscriber: " + newsPublisher.getLatestNews());
    }

}



abstract class NewsPublisher {

    private List<Subscriber> newsSubscribers = new ArrayList<Subscriber>();

    private String latestNews;

    public String getLatestNews() {
        return latestNews;
    }

    public void setLatestNews(String latestNews) {
        this.latestNews = latestNews;
        this.notifyObservers();
    }

    public void attache(Subscriber subscriber) {
        newsSubscribers.add(subscriber);
    }

    public void detach(Subscriber subscriber) {
        newsSubscribers.remove(subscriber);
    }

    public void notifyObservers() {
        if (newsSubscribers != null && newsSubscribers.size() > 0) {
            for (Subscriber s : newsSubscribers) {
                s.update(this);
            }// for
        }// if
    }

}



class BusinessNewsPublisher extends NewsPublisher {}






